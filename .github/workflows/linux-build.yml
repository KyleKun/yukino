name: Linux (AppImage)

on:
    push:
        branches:
            - main
    workflow_dispatch:

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v2

            - uses: actions/setup-node@v2
              with:
                  node-version: 14.x
                  cache: npm

            - uses: subosito/flutter-action@v1.5.3
              with:
                  channel: master

            - name: 🚧 Do prerequisites
              run: |
                  sudo apt-get update
                  sudo apt install -y ninja-build libgtk-3-dev python3-pip python3-setuptools desktop-file-utils libgdk-pixbuf2.0-dev strace fuse vlc libvlc-dev
                  sudo wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage -O /usr/local/bin/appimagetool
                  sudo chmod +x /usr/local/bin/appimagetool
                  sudo pip3 install appimage-builder
                  flutter config --enable-linux-desktop
                  flutter pub get
                  npm ci
                  npm run hive:generate

            - name: 🚩 Check for existing releases
              run: npm run actions:check-release -- '-linux.AppImage'

            - name: 🔨 Building binaries
              run: npm run linux:build

            - name: 📦 Packing as appimage
              run: npm run linux:build:appimage

            - name: 🔢 Get version
              uses: actions/github-script@v4
              id: app_version
              with:
                  result-encoding: string
                  script: |
                      const spawn = require("cross-spawn");
                      const result = spawn.sync("npm", ["run", "helpers:version:print", "-s"]);
                      if (result.status != 0) {
                        throw new Error(result.stderr.toString());
                      }

                      return result.stdout.toString().trim();

            - name: 📝 Get files
              uses: actions/github-script@v4
              id: app_files
              with:
                  result-encoding: string
                  script: |
                      const fg = require("fast-glob");
                      return fg.sync("build/packed/linux/*-linux.AppImage").join("\n");

            - name: 🚀 Release AppImage
              uses: softprops/action-gh-release@v1
              with:
                  tag_name: v${{ steps.app_version.outputs.result }}
                  files: ${{ steps.app_files.outputs.result }}
                  draft: true
